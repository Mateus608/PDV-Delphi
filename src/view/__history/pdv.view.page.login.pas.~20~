unit pdv.view.page.login;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, Vcl.Buttons,
  Vcl.Imaging.jpeg, pdv.view.componente.Transparencia;

type
  TPageLogin = class(TForm)
    pnlContainer: TPanel;
    pnlLogin: TPanel;
    pnlImage: TPanel;
    pnlLogar: TPanel;
    Panel1: TPanel;
    Panel2: TPanel;
    Label1: TLabel;
    Shape1: TShape;
    edtUsuario: TEdit;
    Panel3: TPanel;
    Label2: TLabel;
    Shape2: TShape;
    edtSenha: TEdit;
    Panel4: TPanel;
    Panel5: TPanel;
    Shape3: TShape;
    btnLogar: TSpeedButton;
    Image: TImage;
    procedure btnLogarClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure FormShow(Sender: TObject);
  private
    FFundo: TFundoTransparente; //Fundo transparente na imagem do Form Login
    FUsuario: TProc<String>;
  public
    class function New(AOWner: TComponent): TPageLogin;
    function Embed(Value: TWinControl): TPageLogin;
    function IdentificarUser: TPageLogin;
    function IdentificarUsuario(Value: TProc<String>): TPageLogin;
  end;

var
  PageLogin: TPageLogin;

implementation

{$R *.dfm}

procedure TPageLogin.btnLogarClick(Sender: TObject);
begin
  if not ((edtUsuario.Text = 'Mateus Oliveira Milane') and //Adiciona um usuario ao campo edtUsuario
    (edtSenha.Text = '123')) then //Adiciona uma senha ao campo edtSenha
  begin
    ShowMessage('Login e senha invalidos'); //Mensagem que dispara caso Login e Senha sejam invalidos
    Exit; //Se o Login e Senha estiverem corretos, o Form de Login termina
  end;
  if Assigned(FUsuario) then
    FUsuario(edtUsuario.Text); //Ao cliclar em confirmar, ele passa os valores para o FProc
  close; //Fecha o Form Login

end;


function TPageLogin.Embed(Value: TWinControl): TPageLogin;
begin
   Result := Self; //Retorna este (Self) - retorna para essa classe
   Self.Parent := Value;
end;

procedure TPageLogin.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  FFundo.Free;
end;

procedure TPageLogin.FormCreate(Sender: TObject);
begin
  //Adiciona Form Transparente na imagem do Form Login
  FFundo := TFundoTransparente.Create(nil);
  FFundo.Parent := pnlImage;
  FFundo.Show;

end;

procedure TPageLogin.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  case key of
   VK_RETURN: begin

    btnLogarClick(Self);

   end;
  end;
end;

procedure TPageLogin.FormShow(Sender: TObject);
begin
  edtUsuario.SetFocus;
end;

function TPageLogin.IdentificarUser: TPageLogin;
begin
  Result := Self;
end;

function TPageLogin.IdentificarUsuario(Value: TProc<String>): TPageLogin;
begin
  Result := Self;
  FUsuario := Value;
end;

class function TPageLogin.New(AOWner: TComponent): TPageLogin;
begin
  Result := Self.Create(AOwner);
end;

end.
